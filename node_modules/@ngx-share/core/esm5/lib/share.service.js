/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Inject, Injectable, Optional } from '@angular/core';
import { BehaviorSubject } from 'rxjs';
import { CONFIG } from './share.models';
import { shareButtonsProp } from './share.prop';
import { mergeDeep } from './utils';
import * as i0 from "@angular/core";
import * as i1 from "./share.models";
var ShareService = /** @class */ (function () {
    function ShareService(config) {
        this.config = {
            prop: shareButtonsProp,
            options: {
                theme: 'default',
                include: [],
                exclude: [],
                size: 0,
                url: null,
                title: null,
                description: null,
                image: null,
                tags: null,
                twitterAccount: null,
                autoSetMeta: true,
                gaTracking: false,
                windowWidth: 800,
                windowHeight: 500,
                moreButtonIcon: 'ellipsis-h',
                lessButtonIcon: 'minus'
            }
        };
        this.config$ = new BehaviorSubject(this.config);
        this.setConfig(config);
    }
    Object.defineProperty(ShareService.prototype, "prop", {
        get: /**
         * @return {?}
         */
        function () {
            return this.config.prop;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ShareService.prototype, "twitterAccount", {
        get: /**
         * @return {?}
         */
        function () {
            return this.config.options.twitterAccount;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ShareService.prototype, "theme", {
        get: /**
         * @return {?}
         */
        function () {
            return this.config.options.theme;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ShareService.prototype, "windowSize", {
        get: /**
         * @return {?}
         */
        function () {
            return "width=" + this.config.options.windowWidth + ", height=" + this.config.options.windowHeight;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ShareService.prototype, "url", {
        get: /**
         * @return {?}
         */
        function () {
            return this.config.options.url;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ShareService.prototype, "title", {
        get: /**
         * @return {?}
         */
        function () {
            return this.config.options.title;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ShareService.prototype, "description", {
        get: /**
         * @return {?}
         */
        function () {
            return this.config.options.description;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ShareService.prototype, "image", {
        get: /**
         * @return {?}
         */
        function () {
            return this.config.options.image;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ShareService.prototype, "tags", {
        get: /**
         * @return {?}
         */
        function () {
            return this.config.options.tags;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ShareService.prototype, "autoSetMeta", {
        get: /**
         * @return {?}
         */
        function () {
            return this.config.options.autoSetMeta;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ShareService.prototype, "gaTracking", {
        get: /**
         * @return {?}
         */
        function () {
            return this.config.options.gaTracking;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ShareService.prototype, "size", {
        get: /**
         * @return {?}
         */
        function () {
            return this.config.options.size;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} config
     * @return {?}
     */
    ShareService.prototype.setConfig = /**
     * @param {?} config
     * @return {?}
     */
    function (config) {
        if (config) {
            this.config = mergeDeep(this.config, config);
            this.config$.next(this.config);
        }
    };
    /**
     * @param {?} name
     * @param {?} data
     * @return {?}
     */
    ShareService.prototype.addButton = /**
     * @param {?} name
     * @param {?} data
     * @return {?}
     */
    function (name, data) {
        var _a;
        /** @type {?} */
        var config = {
            prop: tslib_1.__assign({}, shareButtonsProp, (_a = {}, _a[name] = data, _a))
        };
        this.setConfig(config);
    };
    ShareService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */
    ShareService.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [CONFIG,] }] }
    ]; };
    /** @nocollapse */ ShareService.ngInjectableDef = i0.defineInjectable({ factory: function ShareService_Factory() { return new ShareService(i0.inject(i1.CONFIG, 8)); }, token: ShareService, providedIn: "root" });
    return ShareService;
}());
export { ShareService };
if (false) {
    /** @type {?} */
    ShareService.prototype.config;
    /** @type {?} */
    ShareService.prototype.config$;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2hhcmUuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BuZ3gtc2hhcmUvY29yZS8iLCJzb3VyY2VzIjpbImxpYi9zaGFyZS5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLE1BQU0sRUFBRSxVQUFVLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzdELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxNQUFNLENBQUM7QUFDdkMsT0FBTyxFQUFvQyxNQUFNLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUMxRSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFDaEQsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLFNBQVMsQ0FBQzs7O0FBRXBDO0lBNEJFLHNCQUF3QyxNQUEwQjtRQXZCbEUsV0FBTSxHQUF1QjtZQUMzQixJQUFJLEVBQUUsZ0JBQWdCO1lBQ3RCLE9BQU8sRUFBRTtnQkFDUCxLQUFLLEVBQUUsU0FBUztnQkFDaEIsT0FBTyxFQUFFLEVBQUU7Z0JBQ1gsT0FBTyxFQUFFLEVBQUU7Z0JBQ1gsSUFBSSxFQUFFLENBQUM7Z0JBQ1AsR0FBRyxFQUFFLElBQUk7Z0JBQ1QsS0FBSyxFQUFFLElBQUk7Z0JBQ1gsV0FBVyxFQUFFLElBQUk7Z0JBQ2pCLEtBQUssRUFBRSxJQUFJO2dCQUNYLElBQUksRUFBRSxJQUFJO2dCQUNWLGNBQWMsRUFBRSxJQUFJO2dCQUNwQixXQUFXLEVBQUUsSUFBSTtnQkFDakIsVUFBVSxFQUFFLEtBQUs7Z0JBQ2pCLFdBQVcsRUFBRSxHQUFHO2dCQUNoQixZQUFZLEVBQUUsR0FBRztnQkFDakIsY0FBYyxFQUFFLFlBQVk7Z0JBQzVCLGNBQWMsRUFBRSxPQUFPO2FBQ3hCO1NBQ0YsQ0FBQztRQUNGLFlBQU8sR0FBRyxJQUFJLGVBQWUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7UUFHekMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUN6QixDQUFDO0lBRUQsc0JBQUksOEJBQUk7Ozs7UUFBUjtZQUNFLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUM7UUFDMUIsQ0FBQzs7O09BQUE7SUFFRCxzQkFBSSx3Q0FBYzs7OztRQUFsQjtZQUNFLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsY0FBYyxDQUFDO1FBQzVDLENBQUM7OztPQUFBO0lBRUQsc0JBQUksK0JBQUs7Ozs7UUFBVDtZQUNFLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDO1FBQ25DLENBQUM7OztPQUFBO0lBRUQsc0JBQUksb0NBQVU7Ozs7UUFBZDtZQUNFLE9BQU8sV0FBUyxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxXQUFXLGlCQUFZLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLFlBQWMsQ0FBQztRQUNoRyxDQUFDOzs7T0FBQTtJQUVELHNCQUFJLDZCQUFHOzs7O1FBQVA7WUFDRSxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQztRQUNqQyxDQUFDOzs7T0FBQTtJQUVELHNCQUFJLCtCQUFLOzs7O1FBQVQ7WUFDRSxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQztRQUNuQyxDQUFDOzs7T0FBQTtJQUVELHNCQUFJLHFDQUFXOzs7O1FBQWY7WUFDRSxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQztRQUN6QyxDQUFDOzs7T0FBQTtJQUVELHNCQUFJLCtCQUFLOzs7O1FBQVQ7WUFDRSxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQztRQUNuQyxDQUFDOzs7T0FBQTtJQUVELHNCQUFJLDhCQUFJOzs7O1FBQVI7WUFDRSxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQztRQUNsQyxDQUFDOzs7T0FBQTtJQUVELHNCQUFJLHFDQUFXOzs7O1FBQWY7WUFDRSxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQztRQUN6QyxDQUFDOzs7T0FBQTtJQUVELHNCQUFJLG9DQUFVOzs7O1FBQWQ7WUFDRSxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQztRQUN4QyxDQUFDOzs7T0FBQTtJQUVELHNCQUFJLDhCQUFJOzs7O1FBQVI7WUFDRSxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQztRQUNsQyxDQUFDOzs7T0FBQTs7Ozs7SUFFRCxnQ0FBUzs7OztJQUFULFVBQVUsTUFBMEI7UUFDbEMsSUFBSSxNQUFNLEVBQUU7WUFDVixJQUFJLENBQUMsTUFBTSxHQUFHLFNBQVMsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLE1BQU0sQ0FBQyxDQUFDO1lBQzdDLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztTQUNoQztJQUNILENBQUM7Ozs7OztJQUVELGdDQUFTOzs7OztJQUFULFVBQVUsSUFBWSxFQUFFLElBQWtCOzs7WUFDbEMsTUFBTSxHQUFHO1lBQ2IsSUFBSSx1QkFBTSxnQkFBZ0IsWUFBTSxHQUFDLElBQUksSUFBRyxJQUFJLE1BQUU7U0FDL0M7UUFDRCxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ3pCLENBQUM7O2dCQTVGRixVQUFVLFNBQUM7b0JBQ1YsVUFBVSxFQUFFLE1BQU07aUJBQ25COzs7O2dEQTBCYyxRQUFRLFlBQUksTUFBTSxTQUFDLE1BQU07Ozt1QkFsQ3hDO0NBbUdDLEFBN0ZELElBNkZDO1NBMUZZLFlBQVk7OztJQUV2Qiw4QkFvQkU7O0lBQ0YsK0JBQTJDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0LCBJbmplY3RhYmxlLCBPcHRpb25hbCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBCZWhhdmlvclN1YmplY3QgfSBmcm9tICdyeGpzJztcclxuaW1wb3J0IHsgSVNoYXJlQnV0dG9uLCBTaGFyZUJ1dHRvbnNDb25maWcsIENPTkZJRyB9IGZyb20gJy4vc2hhcmUubW9kZWxzJztcclxuaW1wb3J0IHsgc2hhcmVCdXR0b25zUHJvcCB9IGZyb20gJy4vc2hhcmUucHJvcCc7XHJcbmltcG9ydCB7IG1lcmdlRGVlcCB9IGZyb20gJy4vdXRpbHMnO1xyXG5cclxuQEluamVjdGFibGUoe1xyXG4gIHByb3ZpZGVkSW46ICdyb290J1xyXG59KVxyXG5leHBvcnQgY2xhc3MgU2hhcmVTZXJ2aWNlIHtcclxuXHJcbiAgY29uZmlnOiBTaGFyZUJ1dHRvbnNDb25maWcgPSB7XHJcbiAgICBwcm9wOiBzaGFyZUJ1dHRvbnNQcm9wLFxyXG4gICAgb3B0aW9uczoge1xyXG4gICAgICB0aGVtZTogJ2RlZmF1bHQnLFxyXG4gICAgICBpbmNsdWRlOiBbXSxcclxuICAgICAgZXhjbHVkZTogW10sXHJcbiAgICAgIHNpemU6IDAsXHJcbiAgICAgIHVybDogbnVsbCxcclxuICAgICAgdGl0bGU6IG51bGwsXHJcbiAgICAgIGRlc2NyaXB0aW9uOiBudWxsLFxyXG4gICAgICBpbWFnZTogbnVsbCxcclxuICAgICAgdGFnczogbnVsbCxcclxuICAgICAgdHdpdHRlckFjY291bnQ6IG51bGwsXHJcbiAgICAgIGF1dG9TZXRNZXRhOiB0cnVlLFxyXG4gICAgICBnYVRyYWNraW5nOiBmYWxzZSxcclxuICAgICAgd2luZG93V2lkdGg6IDgwMCxcclxuICAgICAgd2luZG93SGVpZ2h0OiA1MDAsXHJcbiAgICAgIG1vcmVCdXR0b25JY29uOiAnZWxsaXBzaXMtaCcsXHJcbiAgICAgIGxlc3NCdXR0b25JY29uOiAnbWludXMnXHJcbiAgICB9XHJcbiAgfTtcclxuICBjb25maWckID0gbmV3IEJlaGF2aW9yU3ViamVjdCh0aGlzLmNvbmZpZyk7XHJcblxyXG4gIGNvbnN0cnVjdG9yKEBPcHRpb25hbCgpIEBJbmplY3QoQ09ORklHKSBjb25maWc6IFNoYXJlQnV0dG9uc0NvbmZpZykge1xyXG4gICAgdGhpcy5zZXRDb25maWcoY29uZmlnKTtcclxuICB9XHJcblxyXG4gIGdldCBwcm9wKCkge1xyXG4gICAgcmV0dXJuIHRoaXMuY29uZmlnLnByb3A7XHJcbiAgfVxyXG5cclxuICBnZXQgdHdpdHRlckFjY291bnQoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5jb25maWcub3B0aW9ucy50d2l0dGVyQWNjb3VudDtcclxuICB9XHJcblxyXG4gIGdldCB0aGVtZSgpIHtcclxuICAgIHJldHVybiB0aGlzLmNvbmZpZy5vcHRpb25zLnRoZW1lO1xyXG4gIH1cclxuXHJcbiAgZ2V0IHdpbmRvd1NpemUoKSB7XHJcbiAgICByZXR1cm4gYHdpZHRoPSR7dGhpcy5jb25maWcub3B0aW9ucy53aW5kb3dXaWR0aH0sIGhlaWdodD0ke3RoaXMuY29uZmlnLm9wdGlvbnMud2luZG93SGVpZ2h0fWA7XHJcbiAgfVxyXG5cclxuICBnZXQgdXJsKCkge1xyXG4gICAgcmV0dXJuIHRoaXMuY29uZmlnLm9wdGlvbnMudXJsO1xyXG4gIH1cclxuXHJcbiAgZ2V0IHRpdGxlKCkge1xyXG4gICAgcmV0dXJuIHRoaXMuY29uZmlnLm9wdGlvbnMudGl0bGU7XHJcbiAgfVxyXG5cclxuICBnZXQgZGVzY3JpcHRpb24oKSB7XHJcbiAgICByZXR1cm4gdGhpcy5jb25maWcub3B0aW9ucy5kZXNjcmlwdGlvbjtcclxuICB9XHJcblxyXG4gIGdldCBpbWFnZSgpIHtcclxuICAgIHJldHVybiB0aGlzLmNvbmZpZy5vcHRpb25zLmltYWdlO1xyXG4gIH1cclxuXHJcbiAgZ2V0IHRhZ3MoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5jb25maWcub3B0aW9ucy50YWdzO1xyXG4gIH1cclxuXHJcbiAgZ2V0IGF1dG9TZXRNZXRhKCkge1xyXG4gICAgcmV0dXJuIHRoaXMuY29uZmlnLm9wdGlvbnMuYXV0b1NldE1ldGE7XHJcbiAgfVxyXG5cclxuICBnZXQgZ2FUcmFja2luZygpIHtcclxuICAgIHJldHVybiB0aGlzLmNvbmZpZy5vcHRpb25zLmdhVHJhY2tpbmc7XHJcbiAgfVxyXG5cclxuICBnZXQgc2l6ZSgpIHtcclxuICAgIHJldHVybiB0aGlzLmNvbmZpZy5vcHRpb25zLnNpemU7XHJcbiAgfVxyXG5cclxuICBzZXRDb25maWcoY29uZmlnOiBTaGFyZUJ1dHRvbnNDb25maWcpIHtcclxuICAgIGlmIChjb25maWcpIHtcclxuICAgICAgdGhpcy5jb25maWcgPSBtZXJnZURlZXAodGhpcy5jb25maWcsIGNvbmZpZyk7XHJcbiAgICAgIHRoaXMuY29uZmlnJC5uZXh0KHRoaXMuY29uZmlnKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGFkZEJ1dHRvbihuYW1lOiBzdHJpbmcsIGRhdGE6IElTaGFyZUJ1dHRvbikge1xyXG4gICAgY29uc3QgY29uZmlnID0ge1xyXG4gICAgICBwcm9wOiB7Li4uc2hhcmVCdXR0b25zUHJvcCwgLi4ue1tuYW1lXTogZGF0YX19XHJcbiAgICB9O1xyXG4gICAgdGhpcy5zZXRDb25maWcoY29uZmlnKTtcclxuICB9XHJcbn1cclxuIl19