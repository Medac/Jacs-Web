import { Component, Input, Output, ViewChild, HostBinding, EventEmitter, ChangeDetectionStrategy, NgModule } from '@angular/core';
import { ShareService, ShareDirective, ShareModule, CONFIG } from '@ngx-share/core';
import { CommonModule } from '@angular/common';
import { FontAwesomeModule } from '@fortawesome/angular-fontawesome';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
class ShareButton {
    /**
     * @param {?} share
     */
    constructor(share) {
        this.share = share;
        /**
         * Show button icon
         */
        this.showIcon = true;
        /**
         * Show button text
         */
        this.showText = false;
        /**
         * Button share count
         */
        this.showCount = false;
        /**
         * Button size
         */
        this.size = this.share.size;
        /**
         * Button theme
         */
        this.theme = this.share.theme;
        /**
         * Stream that emits when share count is fetched
         */
        this.count = new EventEmitter();
        /**
         * Stream that emits when share dialog is opened
         */
        this.opened = new EventEmitter();
        /**
         * Stream that emits when share dialog is closed
         */
        this.closed = new EventEmitter();
    }
    /**
     * @param {?} button
     * @return {?}
     */
    set createButton(button) {
        this.shareCount = 0;
        this.button = button;
    }
    /**
     * Share URL
     * @param {?} url
     * @return {?}
     */
    set setUrl(url) {
        this.shareCount = 0;
        this.url = url;
    }
    /**
     * Set theme as button class
     * @return {?}
     */
    get buttonClass() {
        return `sb-button sb-${this.theme}`;
    }
    /**
     * @param {?} count
     * @return {?}
     */
    onCount(count) {
        this.shareCount = count;
        this.count.emit(count);
    }
}
ShareButton.decorators = [
    { type: Component, args: [{
                selector: 'share-button',
                template: "<button class=\"sb-wrapper\"\r\n        [shareButton]=\"button\"\r\n        [url]=\"url\"\r\n        [image]=\"image\"\r\n        [title]=\"title\"\r\n        [description]=\"description\"\r\n        [tags]=\"tags\"\r\n        [autoSetMeta]=\"autoSetMeta\"\r\n        [getCount]=\"showCount\"\r\n        (count)=\"onCount($event)\"\r\n        (opened)=\"opened.emit($event)\"\r\n        (closed)=\"closed.emit($event)\"\r\n        [class.sb-show-icon]=\"showIcon\"\r\n        [class.sb-show-text]=\"showText\"\r\n        [class.sb-show-count]=\"showCount && shareCount\"\r\n        [style.fontSize.px]=\"(1 + size/20) * 14\">\r\n\r\n  <div class=\"sb-inner\">\r\n\r\n    <div class=\"sb-content\">\r\n\r\n      <!-- BUTTON ICON -->\r\n      <div *ngIf=\"showIcon && ref.prop\" class=\"sb-icon\">\r\n        <fa-icon [icon]=\"icon || ref.prop.icon\" [fixedWidth]=\"true\"></fa-icon>\r\n      </div>\r\n\r\n      <!-- BUTTON TEXT -->\r\n      <div *ngIf=\"showText && ref.prop\" class=\"sb-text\">\r\n        {{ text || ref.prop.text }}\r\n      </div>\r\n\r\n    </div>\r\n\r\n    <!-- BUTTON COUNT -->\r\n    <div *ngIf=\"showCount && shareCount\" class=\"sb-count\">\r\n      <span>{{ shareCount | shareCount }}</span>\r\n    </div>\r\n\r\n  </div>\r\n</button>\r\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: ["::ng-deep .sb-button,::ng-deep .sb-group{display:inline-flex;align-items:flex-start}::ng-deep .sb-group{flex-wrap:wrap}::ng-deep .sb-button{margin:.3125em}::ng-deep .sb-wrapper{font-size:inherit;cursor:pointer;position:relative;outline:0;min-width:4.125em;height:2.5em;border:none;border-radius:1px;padding:0;line-height:2.571em;background-color:transparent}::ng-deep .sb-wrapper .sb-count,::ng-deep .sb-wrapper .sb-icon,::ng-deep .sb-wrapper .sb-text{display:flex;align-items:center;justify-content:center;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}::ng-deep .sb-wrapper .sb-inner{display:flex;flex:1;width:100%;height:100%}::ng-deep .sb-wrapper .sb-content{display:flex;height:100%;width:100%}::ng-deep .sb-wrapper .sb-text{padding:0 .7em;flex:1;height:100%;white-space:nowrap}::ng-deep .sb-wrapper .sb-icon{text-align:center;width:100%;height:100%;font-size:1.2em;min-width:2em}::ng-deep .sb-wrapper .sb-count{font-size:.9em;padding:0 .7em}::ng-deep .sb-wrapper .sb-count,::ng-deep .sb-wrapper .sb-text{font-weight:700}::ng-deep .sb-show-text .sb-icon{width:2em}::ng-deep .sb-show-count{min-width:5.333em}"]
            }] }
];
/** @nocollapse */
ShareButton.ctorParameters = () => [
    { type: ShareService }
];
ShareButton.propDecorators = {
    createButton: [{ type: Input, args: ['button',] }],
    setUrl: [{ type: Input, args: ['url',] }],
    title: [{ type: Input }],
    description: [{ type: Input }],
    image: [{ type: Input }],
    tags: [{ type: Input }],
    autoSetMeta: [{ type: Input }],
    showIcon: [{ type: Input }],
    showText: [{ type: Input }],
    showCount: [{ type: Input }],
    text: [{ type: Input }],
    icon: [{ type: Input }],
    size: [{ type: Input }],
    theme: [{ type: Input }],
    count: [{ type: Output }],
    opened: [{ type: Output }],
    closed: [{ type: Output }],
    buttonClass: [{ type: HostBinding, args: ['class',] }],
    ref: [{ type: ViewChild, args: [ShareDirective,] }]
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
class ShareButtonModule {
    /**
     * @param {?=} config
     * @return {?}
     */
    static forRoot(config) {
        return {
            ngModule: ShareButtonModule,
            providers: [{ provide: CONFIG, useValue: config }]
        };
    }
}
ShareButtonModule.decorators = [
    { type: NgModule, args: [{
                declarations: [
                    ShareButton
                ],
                imports: [
                    ShareModule,
                    FontAwesomeModule,
                    CommonModule
                ],
                exports: [
                    ShareModule,
                    FontAwesomeModule,
                    ShareButton
                ]
            },] }
];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */

export { ShareButtonModule, ShareButton };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LXNoYXJlLWJ1dHRvbi5qcy5tYXAiLCJzb3VyY2VzIjpbIm5nOi8vQG5neC1zaGFyZS9idXR0b24vbGliL3NoYXJlLWJ1dHRvbi50cyIsIm5nOi8vQG5neC1zaGFyZS9idXR0b24vbGliL3NoYXJlLWJ1dHRvbi5tb2R1bGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT3V0cHV0LCBWaWV3Q2hpbGQsIEhvc3RCaW5kaW5nLCBFdmVudEVtaXR0ZXIsIENoYW5nZURldGVjdGlvblN0cmF0ZWd5IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFNoYXJlU2VydmljZSwgU2hhcmVEaXJlY3RpdmUgfSBmcm9tICdAbmd4LXNoYXJlL2NvcmUnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdzaGFyZS1idXR0b24nLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9zaGFyZS1idXR0b24uaHRtbCcsXHJcbiAgc3R5bGVVcmxzOiBbJy4vc2hhcmUtYnV0dG9uLnNjc3MnXSxcclxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaFxyXG59KVxyXG5leHBvcnQgY2xhc3MgU2hhcmVCdXR0b24ge1xyXG5cclxuICAvKiogU2hhcmUgVVJMICovXHJcbiAgdXJsOiBzdHJpbmc7XHJcblxyXG4gIC8qKiBTaGFyZSBjb3VudCB2YWx1ZSAqL1xyXG4gIHNoYXJlQ291bnQ6IG51bWJlcjtcclxuXHJcbiAgLyoqIEJ1dHRvbiBuYW1lICovXHJcbiAgYnV0dG9uOiBzdHJpbmc7XHJcblxyXG4gIEBJbnB1dCgnYnV0dG9uJykgc2V0IGNyZWF0ZUJ1dHRvbihidXR0b246IHN0cmluZykge1xyXG4gICAgdGhpcy5zaGFyZUNvdW50ID0gMDtcclxuICAgIHRoaXMuYnV0dG9uID0gYnV0dG9uO1xyXG4gIH1cclxuXHJcbiAgLyoqIFNoYXJlIFVSTCAqL1xyXG4gIEBJbnB1dCgndXJsJykgc2V0IHNldFVybCh1cmw6IHN0cmluZykge1xyXG4gICAgdGhpcy5zaGFyZUNvdW50ID0gMDtcclxuICAgIHRoaXMudXJsID0gdXJsO1xyXG4gIH1cclxuXHJcbiAgLyoqIFNoYXJlIG1ldGEgdGFncyAqL1xyXG4gIEBJbnB1dCgpIHRpdGxlOiBzdHJpbmc7XHJcbiAgQElucHV0KCkgZGVzY3JpcHRpb246IHN0cmluZztcclxuICBASW5wdXQoKSBpbWFnZTogc3RyaW5nO1xyXG4gIEBJbnB1dCgpIHRhZ3M6IHN0cmluZztcclxuXHJcbiAgLyoqIFNldCBtZXRhIHRhZ3MgZnJvbSBkb2N1bWVudCBoZWFkLCB1c2VmdWwgd2hlbiBTRU8gaXMgc3VwcG9ydGVkICovXHJcbiAgQElucHV0KCkgYXV0b1NldE1ldGE6IGJvb2xlYW47XHJcblxyXG4gIC8qKiBTaG93IGJ1dHRvbiBpY29uICovXHJcbiAgQElucHV0KCkgc2hvd0ljb24gPSB0cnVlO1xyXG5cclxuICAvKiogU2hvdyBidXR0b24gdGV4dCAqL1xyXG4gIEBJbnB1dCgpIHNob3dUZXh0ID0gZmFsc2U7XHJcblxyXG4gIC8qKiBCdXR0b24gc2hhcmUgY291bnQgKi9cclxuICBASW5wdXQoKSBzaG93Q291bnQgPSBmYWxzZTtcclxuXHJcbiAgLyoqIEJ1dHRvbiBjdXN0b20gdGV4dCAqL1xyXG4gIEBJbnB1dCgpIHRleHQ6IHN0cmluZztcclxuXHJcbiAgLyoqIEJ1dHRvbiBjdXN0b20gaWNvbiAqL1xyXG4gIEBJbnB1dCgpIGljb246IHN0cmluZztcclxuXHJcbiAgLyoqIEJ1dHRvbiBzaXplICovXHJcbiAgQElucHV0KCkgc2l6ZTogbnVtYmVyID0gdGhpcy5zaGFyZS5zaXplO1xyXG5cclxuICAvKiogQnV0dG9uIHRoZW1lICovXHJcbiAgQElucHV0KCkgdGhlbWU6IHN0cmluZyA9IHRoaXMuc2hhcmUudGhlbWU7XHJcblxyXG4gIC8qKiBTdHJlYW0gdGhhdCBlbWl0cyB3aGVuIHNoYXJlIGNvdW50IGlzIGZldGNoZWQgKi9cclxuICBAT3V0cHV0KCkgY291bnQgPSBuZXcgRXZlbnRFbWl0dGVyPG51bWJlcj4oKTtcclxuXHJcbiAgLyoqIFN0cmVhbSB0aGF0IGVtaXRzIHdoZW4gc2hhcmUgZGlhbG9nIGlzIG9wZW5lZCAqL1xyXG4gIEBPdXRwdXQoKSBvcGVuZWQgPSBuZXcgRXZlbnRFbWl0dGVyPHN0cmluZz4oKTtcclxuXHJcbiAgLyoqIFN0cmVhbSB0aGF0IGVtaXRzIHdoZW4gc2hhcmUgZGlhbG9nIGlzIGNsb3NlZCAqL1xyXG4gIEBPdXRwdXQoKSBjbG9zZWQgPSBuZXcgRXZlbnRFbWl0dGVyPHN0cmluZz4oKTtcclxuXHJcbiAgLyoqIFNldCB0aGVtZSBhcyBidXR0b24gY2xhc3MgKi9cclxuICBASG9zdEJpbmRpbmcoJ2NsYXNzJykgZ2V0IGJ1dHRvbkNsYXNzKCkge1xyXG4gICAgcmV0dXJuIGBzYi1idXR0b24gc2ItJHt0aGlzLnRoZW1lfWA7XHJcbiAgfVxyXG5cclxuICAvKiogR2V0IGJ1dHRvbiBwcm9wIGZyb20gU2hhcmVEaXJlY3RpdmUgKi9cclxuICBAVmlld0NoaWxkKFNoYXJlRGlyZWN0aXZlKSByZWY6IFNoYXJlRGlyZWN0aXZlO1xyXG5cclxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHNoYXJlOiBTaGFyZVNlcnZpY2UpIHtcclxuICB9XHJcblxyXG4gIG9uQ291bnQoY291bnQ6IG51bWJlcikge1xyXG4gICAgdGhpcy5zaGFyZUNvdW50ID0gY291bnQ7XHJcbiAgICB0aGlzLmNvdW50LmVtaXQoY291bnQpO1xyXG4gIH1cclxuXHJcbn1cclxuIiwiaW1wb3J0IHsgTW9kdWxlV2l0aFByb3ZpZGVycywgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcclxuaW1wb3J0IHsgU2hhcmVNb2R1bGUsIFNoYXJlQnV0dG9uc0NvbmZpZywgQ09ORklHIH0gZnJvbSAnQG5neC1zaGFyZS9jb3JlJztcclxuaW1wb3J0IHsgRm9udEF3ZXNvbWVNb2R1bGUgfSBmcm9tICdAZm9ydGF3ZXNvbWUvYW5ndWxhci1mb250YXdlc29tZSc7XHJcblxyXG5pbXBvcnQgeyBTaGFyZUJ1dHRvbiB9IGZyb20gJy4vc2hhcmUtYnV0dG9uJztcclxuXHJcbkBOZ01vZHVsZSh7XHJcbiAgZGVjbGFyYXRpb25zOiBbXHJcbiAgICBTaGFyZUJ1dHRvblxyXG4gIF0sXHJcbiAgaW1wb3J0czogW1xyXG4gICAgU2hhcmVNb2R1bGUsXHJcbiAgICBGb250QXdlc29tZU1vZHVsZSxcclxuICAgIENvbW1vbk1vZHVsZVxyXG4gIF0sXHJcbiAgZXhwb3J0czogW1xyXG4gICAgU2hhcmVNb2R1bGUsXHJcbiAgICBGb250QXdlc29tZU1vZHVsZSxcclxuICAgIFNoYXJlQnV0dG9uXHJcbiAgXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgU2hhcmVCdXR0b25Nb2R1bGUge1xyXG4gIHN0YXRpYyBmb3JSb290KGNvbmZpZz86IFNoYXJlQnV0dG9uc0NvbmZpZyk6IE1vZHVsZVdpdGhQcm92aWRlcnMge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgbmdNb2R1bGU6IFNoYXJlQnV0dG9uTW9kdWxlLFxyXG4gICAgICBwcm92aWRlcnM6IFt7cHJvdmlkZTogQ09ORklHLCB1c2VWYWx1ZTogY29uZmlnfV1cclxuICAgIH07XHJcbiAgfVxyXG59XHJcbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQSxNQVNhLFdBQVc7Ozs7SUFxRXRCLFlBQW9CLEtBQW1CO1FBQW5CLFVBQUssR0FBTCxLQUFLLENBQWM7Ozs7UUFyQzlCLGFBQVEsR0FBRyxJQUFJLENBQUM7Ozs7UUFHaEIsYUFBUSxHQUFHLEtBQUssQ0FBQzs7OztRQUdqQixjQUFTLEdBQUcsS0FBSyxDQUFDOzs7O1FBU2xCLFNBQUksR0FBVyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQzs7OztRQUcvQixVQUFLLEdBQVcsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUM7Ozs7UUFHaEMsVUFBSyxHQUFHLElBQUksWUFBWSxFQUFVLENBQUM7Ozs7UUFHbkMsV0FBTSxHQUFHLElBQUksWUFBWSxFQUFVLENBQUM7Ozs7UUFHcEMsV0FBTSxHQUFHLElBQUksWUFBWSxFQUFVLENBQUM7S0FXN0M7Ozs7O0lBM0RELElBQXFCLFlBQVksQ0FBQyxNQUFjO1FBQzlDLElBQUksQ0FBQyxVQUFVLEdBQUcsQ0FBQyxDQUFDO1FBQ3BCLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO0tBQ3RCOzs7Ozs7SUFHRCxJQUFrQixNQUFNLENBQUMsR0FBVztRQUNsQyxJQUFJLENBQUMsVUFBVSxHQUFHLENBQUMsQ0FBQztRQUNwQixJQUFJLENBQUMsR0FBRyxHQUFHLEdBQUcsQ0FBQztLQUNoQjs7Ozs7SUEwQ0QsSUFBMEIsV0FBVztRQUNuQyxPQUFPLGdCQUFnQixJQUFJLENBQUMsS0FBSyxFQUFFLENBQUM7S0FDckM7Ozs7O0lBUUQsT0FBTyxDQUFDLEtBQWE7UUFDbkIsSUFBSSxDQUFDLFVBQVUsR0FBRyxLQUFLLENBQUM7UUFDeEIsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7S0FDeEI7OztZQWpGRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLGNBQWM7Z0JBQ3hCLDh2Q0FBa0M7Z0JBRWxDLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNOzthQUNoRDs7OztZQVBRLFlBQVk7OzsyQkFtQmxCLEtBQUssU0FBQyxRQUFRO3FCQU1kLEtBQUssU0FBQyxLQUFLO29CQU1YLEtBQUs7MEJBQ0wsS0FBSztvQkFDTCxLQUFLO21CQUNMLEtBQUs7MEJBR0wsS0FBSzt1QkFHTCxLQUFLO3VCQUdMLEtBQUs7d0JBR0wsS0FBSzttQkFHTCxLQUFLO21CQUdMLEtBQUs7bUJBR0wsS0FBSztvQkFHTCxLQUFLO29CQUdMLE1BQU07cUJBR04sTUFBTTtxQkFHTixNQUFNOzBCQUdOLFdBQVcsU0FBQyxPQUFPO2tCQUtuQixTQUFTLFNBQUMsY0FBYzs7Ozs7OztBQzVFM0IsTUFzQmEsaUJBQWlCOzs7OztJQUM1QixPQUFPLE9BQU8sQ0FBQyxNQUEyQjtRQUN4QyxPQUFPO1lBQ0wsUUFBUSxFQUFFLGlCQUFpQjtZQUMzQixTQUFTLEVBQUUsQ0FBQyxFQUFDLE9BQU8sRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLE1BQU0sRUFBQyxDQUFDO1NBQ2pELENBQUM7S0FDSDs7O1lBckJGLFFBQVEsU0FBQztnQkFDUixZQUFZLEVBQUU7b0JBQ1osV0FBVztpQkFDWjtnQkFDRCxPQUFPLEVBQUU7b0JBQ1AsV0FBVztvQkFDWCxpQkFBaUI7b0JBQ2pCLFlBQVk7aUJBQ2I7Z0JBQ0QsT0FBTyxFQUFFO29CQUNQLFdBQVc7b0JBQ1gsaUJBQWlCO29CQUNqQixXQUFXO2lCQUNaO2FBQ0Y7Ozs7Ozs7Ozs7Ozs7OzsifQ==