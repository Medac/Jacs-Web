{"version":3,"sources":["ng://@ngx-share/button/lib/share-button.ts","ng://@ngx-share/button/lib/share-button.module.ts"],"names":["ShareButton","share","this","showIcon","showText","showCount","size","theme","count","EventEmitter","opened","closed","Object","defineProperty","prototype","button","shareCount","url","onCount","emit","Component","args","selector","template","changeDetection","ChangeDetectionStrategy","OnPush","ShareService","Input","Output","HostBinding","ViewChild","ShareDirective","ShareButtonModule","forRoot","config","ngModule","providers","provide","CONFIG","useValue","NgModule","declarations","imports","ShareModule","FontAwesomeModule","CommonModule","exports"],"mappings":"4gBAAA,IAAAA,EAAA,WA8EE,SAAAA,EAAoBC,GAAAC,KAAAD,MAAAA,EArCXC,KAAAC,UAAW,EAGXD,KAAAE,UAAW,EAGXF,KAAAG,WAAY,EASZH,KAAAI,KAAeJ,KAAKD,MAAMK,KAG1BJ,KAAAK,MAAgBL,KAAKD,MAAMM,MAG1BL,KAAAM,MAAQ,IAAIC,EAAAA,aAGZP,KAAAQ,OAAS,IAAID,EAAAA,aAGbP,KAAAS,OAAS,IAAIF,EAAAA,aAkBzB,OAlEEG,OAAAC,eAAqBb,EAAAc,UAAA,eAAY,KAAjC,SAAkCC,GAChCb,KAAKc,WAAa,EAClBd,KAAKa,OAASA,mCAIhBH,OAAAC,eAAkBb,EAAAc,UAAA,SAAM,KAAxB,SAAyBG,GACvBf,KAAKc,WAAa,EAClBd,KAAKe,IAAMA,mCA2CbL,OAAAC,eAA0Bb,EAAAc,UAAA,cAAW,KAArC,WACE,MAAO,gBAAgBZ,KAAKK,uCAS9BP,EAAAc,UAAAI,QAAA,SAAQV,GACNN,KAAKc,WAAaR,EAClBN,KAAKM,MAAMW,KAAKX,wBAhFnBY,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,eACVC,SAAA,mtCAEAC,gBAAiBC,EAAAA,wBAAwBC,8rCANlCC,EAAAA,sDAmBNC,EAAAA,MAAKP,KAAA,CAAC,0BAMNO,EAAAA,MAAKP,KAAA,CAAC,sBAMNO,EAAAA,2BACAA,EAAAA,qBACAA,EAAAA,oBACAA,EAAAA,2BAGAA,EAAAA,wBAGAA,EAAAA,wBAGAA,EAAAA,yBAGAA,EAAAA,oBAGAA,EAAAA,oBAGAA,EAAAA,oBAGAA,EAAAA,qBAGAA,EAAAA,qBAGAC,EAAAA,uBAGAA,EAAAA,uBAGAA,EAAAA,4BAGAC,EAAAA,YAAWT,KAAA,CAAC,sBAKZU,EAAAA,UAASV,KAAA,CAACW,EAAAA,mBAUbhC,EAtFA,GCAAiC,EAAA,WAOA,SAAAA,KAsBA,OANSA,EAAAC,QAAP,SAAeC,GACb,MAAO,CACLC,SAAUH,EACVI,UAAW,CAAC,CAACC,QAASC,EAAAA,OAAQC,SAAUL,0BAnB7CM,EAAAA,SAAQpB,KAAA,CAAC,CACRqB,aAAc,CACZ1C,GAEF2C,QAAS,CACPC,EAAAA,YACAC,EAAAA,kBACAC,EAAAA,cAEFC,QAAS,CACPH,EAAAA,YACAC,EAAAA,kBACA7C,OAUJiC,EA7BA","sourcesContent":["import { Component, Input, Output, ViewChild, HostBinding, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\r\nimport { ShareService, ShareDirective } from '@ngx-share/core';\r\n\r\n@Component({\r\n  selector: 'share-button',\r\n  templateUrl: './share-button.html',\r\n  styleUrls: ['./share-button.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ShareButton {\r\n\r\n  /** Share URL */\r\n  url: string;\r\n\r\n  /** Share count value */\r\n  shareCount: number;\r\n\r\n  /** Button name */\r\n  button: string;\r\n\r\n  @Input('button') set createButton(button: string) {\r\n    this.shareCount = 0;\r\n    this.button = button;\r\n  }\r\n\r\n  /** Share URL */\r\n  @Input('url') set setUrl(url: string) {\r\n    this.shareCount = 0;\r\n    this.url = url;\r\n  }\r\n\r\n  /** Share meta tags */\r\n  @Input() title: string;\r\n  @Input() description: string;\r\n  @Input() image: string;\r\n  @Input() tags: string;\r\n\r\n  /** Set meta tags from document head, useful when SEO is supported */\r\n  @Input() autoSetMeta: boolean;\r\n\r\n  /** Show button icon */\r\n  @Input() showIcon = true;\r\n\r\n  /** Show button text */\r\n  @Input() showText = false;\r\n\r\n  /** Button share count */\r\n  @Input() showCount = false;\r\n\r\n  /** Button custom text */\r\n  @Input() text: string;\r\n\r\n  /** Button custom icon */\r\n  @Input() icon: string;\r\n\r\n  /** Button size */\r\n  @Input() size: number = this.share.size;\r\n\r\n  /** Button theme */\r\n  @Input() theme: string = this.share.theme;\r\n\r\n  /** Stream that emits when share count is fetched */\r\n  @Output() count = new EventEmitter<number>();\r\n\r\n  /** Stream that emits when share dialog is opened */\r\n  @Output() opened = new EventEmitter<string>();\r\n\r\n  /** Stream that emits when share dialog is closed */\r\n  @Output() closed = new EventEmitter<string>();\r\n\r\n  /** Set theme as button class */\r\n  @HostBinding('class') get buttonClass() {\r\n    return `sb-button sb-${this.theme}`;\r\n  }\r\n\r\n  /** Get button prop from ShareDirective */\r\n  @ViewChild(ShareDirective) ref: ShareDirective;\r\n\r\n  constructor(private share: ShareService) {\r\n  }\r\n\r\n  onCount(count: number) {\r\n    this.shareCount = count;\r\n    this.count.emit(count);\r\n  }\r\n\r\n}\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ShareModule, ShareButtonsConfig, CONFIG } from '@ngx-share/core';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\n\r\nimport { ShareButton } from './share-button';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ShareButton\r\n  ],\r\n  imports: [\r\n    ShareModule,\r\n    FontAwesomeModule,\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    ShareModule,\r\n    FontAwesomeModule,\r\n    ShareButton\r\n  ]\r\n})\r\nexport class ShareButtonModule {\r\n  static forRoot(config?: ShareButtonsConfig): ModuleWithProviders {\r\n    return {\r\n      ngModule: ShareButtonModule,\r\n      providers: [{provide: CONFIG, useValue: config}]\r\n    };\r\n  }\r\n}\r\n"]}