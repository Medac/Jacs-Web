{"version":3,"file":"ngx-share-button.umd.js.map","sources":["ng://@ngx-share/button/lib/share-button.ts","ng://@ngx-share/button/lib/share-button.module.ts"],"sourcesContent":["import { Component, Input, Output, ViewChild, HostBinding, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\r\nimport { ShareService, ShareDirective } from '@ngx-share/core';\r\n\r\n@Component({\r\n  selector: 'share-button',\r\n  templateUrl: './share-button.html',\r\n  styleUrls: ['./share-button.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ShareButton {\r\n\r\n  /** Share URL */\r\n  url: string;\r\n\r\n  /** Share count value */\r\n  shareCount: number;\r\n\r\n  /** Button name */\r\n  button: string;\r\n\r\n  @Input('button') set createButton(button: string) {\r\n    this.shareCount = 0;\r\n    this.button = button;\r\n  }\r\n\r\n  /** Share URL */\r\n  @Input('url') set setUrl(url: string) {\r\n    this.shareCount = 0;\r\n    this.url = url;\r\n  }\r\n\r\n  /** Share meta tags */\r\n  @Input() title: string;\r\n  @Input() description: string;\r\n  @Input() image: string;\r\n  @Input() tags: string;\r\n\r\n  /** Set meta tags from document head, useful when SEO is supported */\r\n  @Input() autoSetMeta: boolean;\r\n\r\n  /** Show button icon */\r\n  @Input() showIcon = true;\r\n\r\n  /** Show button text */\r\n  @Input() showText = false;\r\n\r\n  /** Button share count */\r\n  @Input() showCount = false;\r\n\r\n  /** Button custom text */\r\n  @Input() text: string;\r\n\r\n  /** Button custom icon */\r\n  @Input() icon: string;\r\n\r\n  /** Button size */\r\n  @Input() size: number = this.share.size;\r\n\r\n  /** Button theme */\r\n  @Input() theme: string = this.share.theme;\r\n\r\n  /** Stream that emits when share count is fetched */\r\n  @Output() count = new EventEmitter<number>();\r\n\r\n  /** Stream that emits when share dialog is opened */\r\n  @Output() opened = new EventEmitter<string>();\r\n\r\n  /** Stream that emits when share dialog is closed */\r\n  @Output() closed = new EventEmitter<string>();\r\n\r\n  /** Set theme as button class */\r\n  @HostBinding('class') get buttonClass() {\r\n    return `sb-button sb-${this.theme}`;\r\n  }\r\n\r\n  /** Get button prop from ShareDirective */\r\n  @ViewChild(ShareDirective) ref: ShareDirective;\r\n\r\n  constructor(private share: ShareService) {\r\n  }\r\n\r\n  onCount(count: number) {\r\n    this.shareCount = count;\r\n    this.count.emit(count);\r\n  }\r\n\r\n}\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ShareModule, ShareButtonsConfig, CONFIG } from '@ngx-share/core';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\n\r\nimport { ShareButton } from './share-button';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ShareButton\r\n  ],\r\n  imports: [\r\n    ShareModule,\r\n    FontAwesomeModule,\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    ShareModule,\r\n    FontAwesomeModule,\r\n    ShareButton\r\n  ]\r\n})\r\nexport class ShareButtonModule {\r\n  static forRoot(config?: ShareButtonsConfig): ModuleWithProviders {\r\n    return {\r\n      ngModule: ShareButtonModule,\r\n      providers: [{provide: CONFIG, useValue: config}]\r\n    };\r\n  }\r\n}\r\n"],"names":["EventEmitter","Component","ChangeDetectionStrategy","ShareService","Input","Output","HostBinding","ViewChild","ShareDirective","CONFIG","NgModule","ShareModule","FontAwesomeModule","CommonModule"],"mappings":";;;;;;;;;;AAAA;QA8EE,qBAAoB,KAAmB;YAAnB,UAAK,GAAL,KAAK,CAAc;;;;YArC9B,aAAQ,GAAG,IAAI,CAAC;;;;YAGhB,aAAQ,GAAG,KAAK,CAAC;;;;YAGjB,cAAS,GAAG,KAAK,CAAC;;;;YASlB,SAAI,GAAW,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;;;;YAG/B,UAAK,GAAW,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;;;;YAGhC,UAAK,GAAG,IAAIA,iBAAY,EAAU,CAAC;;;;YAGnC,WAAM,GAAG,IAAIA,iBAAY,EAAU,CAAC;;;;YAGpC,WAAM,GAAG,IAAIA,iBAAY,EAAU,CAAC;SAW7C;QA3DD,sBAAqB,qCAAY;;;;gBAAjC,UAAkC,MAAc;gBAC9C,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;gBACpB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;aACtB;;;WAAA;QAGD,sBAAkB,+BAAM;;;;;;gBAAxB,UAAyB,GAAW;gBAClC,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;gBACpB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;aAChB;;;WAAA;QA0CD,sBAA0B,oCAAW;;;;;gBAArC;gBACE,OAAO,kBAAgB,IAAI,CAAC,KAAO,CAAC;aACrC;;;WAAA;;;;;QAQD,6BAAO;;;;YAAP,UAAQ,KAAa;gBACnB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACxB;;oBAjFFC,cAAS,SAAC;wBACT,QAAQ,EAAE,cAAc;wBACxB,8vCAAkC;wBAElC,eAAe,EAAEC,4BAAuB,CAAC,MAAM;;qBAChD;;;;;wBAPQC,mBAAY;;;;mCAmBlBC,UAAK,SAAC,QAAQ;6BAMdA,UAAK,SAAC,KAAK;4BAMXA,UAAK;kCACLA,UAAK;4BACLA,UAAK;2BACLA,UAAK;kCAGLA,UAAK;+BAGLA,UAAK;+BAGLA,UAAK;gCAGLA,UAAK;2BAGLA,UAAK;2BAGLA,UAAK;2BAGLA,UAAK;4BAGLA,UAAK;4BAGLC,WAAM;6BAGNA,WAAM;6BAGNA,WAAM;kCAGNC,gBAAW,SAAC,OAAO;0BAKnBC,cAAS,SAACC,qBAAc;;QAU3B,kBAAC;KAnFD;;;;;;ACHA;QAOA;SAsBC;;;;;QANQ,yBAAO;;;;YAAd,UAAe,MAA2B;gBACxC,OAAO;oBACL,QAAQ,EAAE,iBAAiB;oBAC3B,SAAS,EAAE,CAAC,EAAC,OAAO,EAAEC,aAAM,EAAE,QAAQ,EAAE,MAAM,EAAC,CAAC;iBACjD,CAAC;aACH;;oBArBFC,aAAQ,SAAC;wBACR,YAAY,EAAE;4BACZ,WAAW;yBACZ;wBACD,OAAO,EAAE;4BACPC,kBAAW;4BACXC,oCAAiB;4BACjBC,mBAAY;yBACb;wBACD,OAAO,EAAE;4BACPF,kBAAW;4BACXC,oCAAiB;4BACjB,WAAW;yBACZ;qBACF;;QAQD,wBAAC;KAtBD;;;;;;;;;;;;;;;;;;;;;;;"}
