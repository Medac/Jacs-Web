(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@ngx-share/core'), require('@angular/common'), require('@fortawesome/angular-fontawesome')) :
    typeof define === 'function' && define.amd ? define('@ngx-share/button', ['exports', '@angular/core', '@ngx-share/core', '@angular/common', '@fortawesome/angular-fontawesome'], factory) :
    (factory((global['ngx-share'] = global['ngx-share'] || {}, global['ngx-share'].button = {}),global.ng.core,global.core$1,global.ng.common,global.angularFontawesome));
}(this, (function (exports,core,core$1,common,angularFontawesome) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
     */
    var ShareButton = /** @class */ (function () {
        function ShareButton(share) {
            this.share = share;
            /**
             * Show button icon
             */
            this.showIcon = true;
            /**
             * Show button text
             */
            this.showText = false;
            /**
             * Button share count
             */
            this.showCount = false;
            /**
             * Button size
             */
            this.size = this.share.size;
            /**
             * Button theme
             */
            this.theme = this.share.theme;
            /**
             * Stream that emits when share count is fetched
             */
            this.count = new core.EventEmitter();
            /**
             * Stream that emits when share dialog is opened
             */
            this.opened = new core.EventEmitter();
            /**
             * Stream that emits when share dialog is closed
             */
            this.closed = new core.EventEmitter();
        }
        Object.defineProperty(ShareButton.prototype, "createButton", {
            set: /**
             * @param {?} button
             * @return {?}
             */ function (button) {
                this.shareCount = 0;
                this.button = button;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ShareButton.prototype, "setUrl", {
            /** Share URL */
            set: /**
             * Share URL
             * @param {?} url
             * @return {?}
             */ function (url) {
                this.shareCount = 0;
                this.url = url;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ShareButton.prototype, "buttonClass", {
            /** Set theme as button class */
            get: /**
             * Set theme as button class
             * @return {?}
             */ function () {
                return "sb-button sb-" + this.theme;
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @param {?} count
         * @return {?}
         */
        ShareButton.prototype.onCount = /**
         * @param {?} count
         * @return {?}
         */
            function (count) {
                this.shareCount = count;
                this.count.emit(count);
            };
        ShareButton.decorators = [
            { type: core.Component, args: [{
                        selector: 'share-button',
                        template: "<button class=\"sb-wrapper\"\r\n        [shareButton]=\"button\"\r\n        [url]=\"url\"\r\n        [image]=\"image\"\r\n        [title]=\"title\"\r\n        [description]=\"description\"\r\n        [tags]=\"tags\"\r\n        [autoSetMeta]=\"autoSetMeta\"\r\n        [getCount]=\"showCount\"\r\n        (count)=\"onCount($event)\"\r\n        (opened)=\"opened.emit($event)\"\r\n        (closed)=\"closed.emit($event)\"\r\n        [class.sb-show-icon]=\"showIcon\"\r\n        [class.sb-show-text]=\"showText\"\r\n        [class.sb-show-count]=\"showCount && shareCount\"\r\n        [style.fontSize.px]=\"(1 + size/20) * 14\">\r\n\r\n  <div class=\"sb-inner\">\r\n\r\n    <div class=\"sb-content\">\r\n\r\n      <!-- BUTTON ICON -->\r\n      <div *ngIf=\"showIcon && ref.prop\" class=\"sb-icon\">\r\n        <fa-icon [icon]=\"icon || ref.prop.icon\" [fixedWidth]=\"true\"></fa-icon>\r\n      </div>\r\n\r\n      <!-- BUTTON TEXT -->\r\n      <div *ngIf=\"showText && ref.prop\" class=\"sb-text\">\r\n        {{ text || ref.prop.text }}\r\n      </div>\r\n\r\n    </div>\r\n\r\n    <!-- BUTTON COUNT -->\r\n    <div *ngIf=\"showCount && shareCount\" class=\"sb-count\">\r\n      <span>{{ shareCount | shareCount }}</span>\r\n    </div>\r\n\r\n  </div>\r\n</button>\r\n",
                        changeDetection: core.ChangeDetectionStrategy.OnPush,
                        styles: ["::ng-deep .sb-button,::ng-deep .sb-group{display:inline-flex;align-items:flex-start}::ng-deep .sb-group{flex-wrap:wrap}::ng-deep .sb-button{margin:.3125em}::ng-deep .sb-wrapper{font-size:inherit;cursor:pointer;position:relative;outline:0;min-width:4.125em;height:2.5em;border:none;border-radius:1px;padding:0;line-height:2.571em;background-color:transparent}::ng-deep .sb-wrapper .sb-count,::ng-deep .sb-wrapper .sb-icon,::ng-deep .sb-wrapper .sb-text{display:flex;align-items:center;justify-content:center;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}::ng-deep .sb-wrapper .sb-inner{display:flex;flex:1;width:100%;height:100%}::ng-deep .sb-wrapper .sb-content{display:flex;height:100%;width:100%}::ng-deep .sb-wrapper .sb-text{padding:0 .7em;flex:1;height:100%;white-space:nowrap}::ng-deep .sb-wrapper .sb-icon{text-align:center;width:100%;height:100%;font-size:1.2em;min-width:2em}::ng-deep .sb-wrapper .sb-count{font-size:.9em;padding:0 .7em}::ng-deep .sb-wrapper .sb-count,::ng-deep .sb-wrapper .sb-text{font-weight:700}::ng-deep .sb-show-text .sb-icon{width:2em}::ng-deep .sb-show-count{min-width:5.333em}"]
                    }] }
        ];
        /** @nocollapse */
        ShareButton.ctorParameters = function () {
            return [
                { type: core$1.ShareService }
            ];
        };
        ShareButton.propDecorators = {
            createButton: [{ type: core.Input, args: ['button',] }],
            setUrl: [{ type: core.Input, args: ['url',] }],
            title: [{ type: core.Input }],
            description: [{ type: core.Input }],
            image: [{ type: core.Input }],
            tags: [{ type: core.Input }],
            autoSetMeta: [{ type: core.Input }],
            showIcon: [{ type: core.Input }],
            showText: [{ type: core.Input }],
            showCount: [{ type: core.Input }],
            text: [{ type: core.Input }],
            icon: [{ type: core.Input }],
            size: [{ type: core.Input }],
            theme: [{ type: core.Input }],
            count: [{ type: core.Output }],
            opened: [{ type: core.Output }],
            closed: [{ type: core.Output }],
            buttonClass: [{ type: core.HostBinding, args: ['class',] }],
            ref: [{ type: core.ViewChild, args: [core$1.ShareDirective,] }]
        };
        return ShareButton;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
     */
    var ShareButtonModule = /** @class */ (function () {
        function ShareButtonModule() {
        }
        /**
         * @param {?=} config
         * @return {?}
         */
        ShareButtonModule.forRoot = /**
         * @param {?=} config
         * @return {?}
         */
            function (config) {
                return {
                    ngModule: ShareButtonModule,
                    providers: [{ provide: core$1.CONFIG, useValue: config }]
                };
            };
        ShareButtonModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [
                            ShareButton
                        ],
                        imports: [
                            core$1.ShareModule,
                            angularFontawesome.FontAwesomeModule,
                            common.CommonModule
                        ],
                        exports: [
                            core$1.ShareModule,
                            angularFontawesome.FontAwesomeModule,
                            ShareButton
                        ]
                    },] }
        ];
        return ShareButtonModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
     */

    exports.ShareButtonModule = ShareButtonModule;
    exports.ShareButton = ShareButton;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LXNoYXJlLWJ1dHRvbi51bWQuanMubWFwIiwic291cmNlcyI6WyJuZzovL0BuZ3gtc2hhcmUvYnV0dG9uL2xpYi9zaGFyZS1idXR0b24udHMiLCJuZzovL0BuZ3gtc2hhcmUvYnV0dG9uL2xpYi9zaGFyZS1idXR0b24ubW9kdWxlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE91dHB1dCwgVmlld0NoaWxkLCBIb3N0QmluZGluZywgRXZlbnRFbWl0dGVyLCBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBTaGFyZVNlcnZpY2UsIFNoYXJlRGlyZWN0aXZlIH0gZnJvbSAnQG5neC1zaGFyZS9jb3JlJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnc2hhcmUtYnV0dG9uJyxcclxuICB0ZW1wbGF0ZVVybDogJy4vc2hhcmUtYnV0dG9uLmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWycuL3NoYXJlLWJ1dHRvbi5zY3NzJ10sXHJcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2hcclxufSlcclxuZXhwb3J0IGNsYXNzIFNoYXJlQnV0dG9uIHtcclxuXHJcbiAgLyoqIFNoYXJlIFVSTCAqL1xyXG4gIHVybDogc3RyaW5nO1xyXG5cclxuICAvKiogU2hhcmUgY291bnQgdmFsdWUgKi9cclxuICBzaGFyZUNvdW50OiBudW1iZXI7XHJcblxyXG4gIC8qKiBCdXR0b24gbmFtZSAqL1xyXG4gIGJ1dHRvbjogc3RyaW5nO1xyXG5cclxuICBASW5wdXQoJ2J1dHRvbicpIHNldCBjcmVhdGVCdXR0b24oYnV0dG9uOiBzdHJpbmcpIHtcclxuICAgIHRoaXMuc2hhcmVDb3VudCA9IDA7XHJcbiAgICB0aGlzLmJ1dHRvbiA9IGJ1dHRvbjtcclxuICB9XHJcblxyXG4gIC8qKiBTaGFyZSBVUkwgKi9cclxuICBASW5wdXQoJ3VybCcpIHNldCBzZXRVcmwodXJsOiBzdHJpbmcpIHtcclxuICAgIHRoaXMuc2hhcmVDb3VudCA9IDA7XHJcbiAgICB0aGlzLnVybCA9IHVybDtcclxuICB9XHJcblxyXG4gIC8qKiBTaGFyZSBtZXRhIHRhZ3MgKi9cclxuICBASW5wdXQoKSB0aXRsZTogc3RyaW5nO1xyXG4gIEBJbnB1dCgpIGRlc2NyaXB0aW9uOiBzdHJpbmc7XHJcbiAgQElucHV0KCkgaW1hZ2U6IHN0cmluZztcclxuICBASW5wdXQoKSB0YWdzOiBzdHJpbmc7XHJcblxyXG4gIC8qKiBTZXQgbWV0YSB0YWdzIGZyb20gZG9jdW1lbnQgaGVhZCwgdXNlZnVsIHdoZW4gU0VPIGlzIHN1cHBvcnRlZCAqL1xyXG4gIEBJbnB1dCgpIGF1dG9TZXRNZXRhOiBib29sZWFuO1xyXG5cclxuICAvKiogU2hvdyBidXR0b24gaWNvbiAqL1xyXG4gIEBJbnB1dCgpIHNob3dJY29uID0gdHJ1ZTtcclxuXHJcbiAgLyoqIFNob3cgYnV0dG9uIHRleHQgKi9cclxuICBASW5wdXQoKSBzaG93VGV4dCA9IGZhbHNlO1xyXG5cclxuICAvKiogQnV0dG9uIHNoYXJlIGNvdW50ICovXHJcbiAgQElucHV0KCkgc2hvd0NvdW50ID0gZmFsc2U7XHJcblxyXG4gIC8qKiBCdXR0b24gY3VzdG9tIHRleHQgKi9cclxuICBASW5wdXQoKSB0ZXh0OiBzdHJpbmc7XHJcblxyXG4gIC8qKiBCdXR0b24gY3VzdG9tIGljb24gKi9cclxuICBASW5wdXQoKSBpY29uOiBzdHJpbmc7XHJcblxyXG4gIC8qKiBCdXR0b24gc2l6ZSAqL1xyXG4gIEBJbnB1dCgpIHNpemU6IG51bWJlciA9IHRoaXMuc2hhcmUuc2l6ZTtcclxuXHJcbiAgLyoqIEJ1dHRvbiB0aGVtZSAqL1xyXG4gIEBJbnB1dCgpIHRoZW1lOiBzdHJpbmcgPSB0aGlzLnNoYXJlLnRoZW1lO1xyXG5cclxuICAvKiogU3RyZWFtIHRoYXQgZW1pdHMgd2hlbiBzaGFyZSBjb3VudCBpcyBmZXRjaGVkICovXHJcbiAgQE91dHB1dCgpIGNvdW50ID0gbmV3IEV2ZW50RW1pdHRlcjxudW1iZXI+KCk7XHJcblxyXG4gIC8qKiBTdHJlYW0gdGhhdCBlbWl0cyB3aGVuIHNoYXJlIGRpYWxvZyBpcyBvcGVuZWQgKi9cclxuICBAT3V0cHV0KCkgb3BlbmVkID0gbmV3IEV2ZW50RW1pdHRlcjxzdHJpbmc+KCk7XHJcblxyXG4gIC8qKiBTdHJlYW0gdGhhdCBlbWl0cyB3aGVuIHNoYXJlIGRpYWxvZyBpcyBjbG9zZWQgKi9cclxuICBAT3V0cHV0KCkgY2xvc2VkID0gbmV3IEV2ZW50RW1pdHRlcjxzdHJpbmc+KCk7XHJcblxyXG4gIC8qKiBTZXQgdGhlbWUgYXMgYnV0dG9uIGNsYXNzICovXHJcbiAgQEhvc3RCaW5kaW5nKCdjbGFzcycpIGdldCBidXR0b25DbGFzcygpIHtcclxuICAgIHJldHVybiBgc2ItYnV0dG9uIHNiLSR7dGhpcy50aGVtZX1gO1xyXG4gIH1cclxuXHJcbiAgLyoqIEdldCBidXR0b24gcHJvcCBmcm9tIFNoYXJlRGlyZWN0aXZlICovXHJcbiAgQFZpZXdDaGlsZChTaGFyZURpcmVjdGl2ZSkgcmVmOiBTaGFyZURpcmVjdGl2ZTtcclxuXHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBzaGFyZTogU2hhcmVTZXJ2aWNlKSB7XHJcbiAgfVxyXG5cclxuICBvbkNvdW50KGNvdW50OiBudW1iZXIpIHtcclxuICAgIHRoaXMuc2hhcmVDb3VudCA9IGNvdW50O1xyXG4gICAgdGhpcy5jb3VudC5lbWl0KGNvdW50KTtcclxuICB9XHJcblxyXG59XHJcbiIsImltcG9ydCB7IE1vZHVsZVdpdGhQcm92aWRlcnMsIE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XHJcbmltcG9ydCB7IFNoYXJlTW9kdWxlLCBTaGFyZUJ1dHRvbnNDb25maWcsIENPTkZJRyB9IGZyb20gJ0BuZ3gtc2hhcmUvY29yZSc7XHJcbmltcG9ydCB7IEZvbnRBd2Vzb21lTW9kdWxlIH0gZnJvbSAnQGZvcnRhd2Vzb21lL2FuZ3VsYXItZm9udGF3ZXNvbWUnO1xyXG5cclxuaW1wb3J0IHsgU2hhcmVCdXR0b24gfSBmcm9tICcuL3NoYXJlLWJ1dHRvbic7XHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gIGRlY2xhcmF0aW9uczogW1xyXG4gICAgU2hhcmVCdXR0b25cclxuICBdLFxyXG4gIGltcG9ydHM6IFtcclxuICAgIFNoYXJlTW9kdWxlLFxyXG4gICAgRm9udEF3ZXNvbWVNb2R1bGUsXHJcbiAgICBDb21tb25Nb2R1bGVcclxuICBdLFxyXG4gIGV4cG9ydHM6IFtcclxuICAgIFNoYXJlTW9kdWxlLFxyXG4gICAgRm9udEF3ZXNvbWVNb2R1bGUsXHJcbiAgICBTaGFyZUJ1dHRvblxyXG4gIF1cclxufSlcclxuZXhwb3J0IGNsYXNzIFNoYXJlQnV0dG9uTW9kdWxlIHtcclxuICBzdGF0aWMgZm9yUm9vdChjb25maWc/OiBTaGFyZUJ1dHRvbnNDb25maWcpOiBNb2R1bGVXaXRoUHJvdmlkZXJzIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIG5nTW9kdWxlOiBTaGFyZUJ1dHRvbk1vZHVsZSxcclxuICAgICAgcHJvdmlkZXJzOiBbe3Byb3ZpZGU6IENPTkZJRywgdXNlVmFsdWU6IGNvbmZpZ31dXHJcbiAgICB9O1xyXG4gIH1cclxufVxyXG4iXSwibmFtZXMiOlsiRXZlbnRFbWl0dGVyIiwiQ29tcG9uZW50IiwiQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kiLCJTaGFyZVNlcnZpY2UiLCJJbnB1dCIsIk91dHB1dCIsIkhvc3RCaW5kaW5nIiwiVmlld0NoaWxkIiwiU2hhcmVEaXJlY3RpdmUiLCJDT05GSUciLCJOZ01vZHVsZSIsIlNoYXJlTW9kdWxlIiwiRm9udEF3ZXNvbWVNb2R1bGUiLCJDb21tb25Nb2R1bGUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTtRQThFRSxxQkFBb0IsS0FBbUI7WUFBbkIsVUFBSyxHQUFMLEtBQUssQ0FBYzs7OztZ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