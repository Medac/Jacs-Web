/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
import { Component, Input, Output, ViewChild, HostBinding, EventEmitter, ChangeDetectionStrategy } from '@angular/core';
import { ShareService, ShareDirective } from '@ngx-share/core';
export class ShareButton {
    /**
     * @param {?} share
     */
    constructor(share) {
        this.share = share;
        /**
         * Show button icon
         */
        this.showIcon = true;
        /**
         * Show button text
         */
        this.showText = false;
        /**
         * Button share count
         */
        this.showCount = false;
        /**
         * Button size
         */
        this.size = this.share.size;
        /**
         * Button theme
         */
        this.theme = this.share.theme;
        /**
         * Stream that emits when share count is fetched
         */
        this.count = new EventEmitter();
        /**
         * Stream that emits when share dialog is opened
         */
        this.opened = new EventEmitter();
        /**
         * Stream that emits when share dialog is closed
         */
        this.closed = new EventEmitter();
    }
    /**
     * @param {?} button
     * @return {?}
     */
    set createButton(button) {
        this.shareCount = 0;
        this.button = button;
    }
    /**
     * Share URL
     * @param {?} url
     * @return {?}
     */
    set setUrl(url) {
        this.shareCount = 0;
        this.url = url;
    }
    /**
     * Set theme as button class
     * @return {?}
     */
    get buttonClass() {
        return `sb-button sb-${this.theme}`;
    }
    /**
     * @param {?} count
     * @return {?}
     */
    onCount(count) {
        this.shareCount = count;
        this.count.emit(count);
    }
}
ShareButton.decorators = [
    { type: Component, args: [{
                selector: 'share-button',
                template: "<button class=\"sb-wrapper\"\r\n        [shareButton]=\"button\"\r\n        [url]=\"url\"\r\n        [image]=\"image\"\r\n        [title]=\"title\"\r\n        [description]=\"description\"\r\n        [tags]=\"tags\"\r\n        [autoSetMeta]=\"autoSetMeta\"\r\n        [getCount]=\"showCount\"\r\n        (count)=\"onCount($event)\"\r\n        (opened)=\"opened.emit($event)\"\r\n        (closed)=\"closed.emit($event)\"\r\n        [class.sb-show-icon]=\"showIcon\"\r\n        [class.sb-show-text]=\"showText\"\r\n        [class.sb-show-count]=\"showCount && shareCount\"\r\n        [style.fontSize.px]=\"(1 + size/20) * 14\">\r\n\r\n  <div class=\"sb-inner\">\r\n\r\n    <div class=\"sb-content\">\r\n\r\n      <!-- BUTTON ICON -->\r\n      <div *ngIf=\"showIcon && ref.prop\" class=\"sb-icon\">\r\n        <fa-icon [icon]=\"icon || ref.prop.icon\" [fixedWidth]=\"true\"></fa-icon>\r\n      </div>\r\n\r\n      <!-- BUTTON TEXT -->\r\n      <div *ngIf=\"showText && ref.prop\" class=\"sb-text\">\r\n        {{ text || ref.prop.text }}\r\n      </div>\r\n\r\n    </div>\r\n\r\n    <!-- BUTTON COUNT -->\r\n    <div *ngIf=\"showCount && shareCount\" class=\"sb-count\">\r\n      <span>{{ shareCount | shareCount }}</span>\r\n    </div>\r\n\r\n  </div>\r\n</button>\r\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: ["::ng-deep .sb-button,::ng-deep .sb-group{display:inline-flex;align-items:flex-start}::ng-deep .sb-group{flex-wrap:wrap}::ng-deep .sb-button{margin:.3125em}::ng-deep .sb-wrapper{font-size:inherit;cursor:pointer;position:relative;outline:0;min-width:4.125em;height:2.5em;border:none;border-radius:1px;padding:0;line-height:2.571em;background-color:transparent}::ng-deep .sb-wrapper .sb-count,::ng-deep .sb-wrapper .sb-icon,::ng-deep .sb-wrapper .sb-text{display:flex;align-items:center;justify-content:center;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}::ng-deep .sb-wrapper .sb-inner{display:flex;flex:1;width:100%;height:100%}::ng-deep .sb-wrapper .sb-content{display:flex;height:100%;width:100%}::ng-deep .sb-wrapper .sb-text{padding:0 .7em;flex:1;height:100%;white-space:nowrap}::ng-deep .sb-wrapper .sb-icon{text-align:center;width:100%;height:100%;font-size:1.2em;min-width:2em}::ng-deep .sb-wrapper .sb-count{font-size:.9em;padding:0 .7em}::ng-deep .sb-wrapper .sb-count,::ng-deep .sb-wrapper .sb-text{font-weight:700}::ng-deep .sb-show-text .sb-icon{width:2em}::ng-deep .sb-show-count{min-width:5.333em}"]
            }] }
];
/** @nocollapse */
ShareButton.ctorParameters = () => [
    { type: ShareService }
];
ShareButton.propDecorators = {
    createButton: [{ type: Input, args: ['button',] }],
    setUrl: [{ type: Input, args: ['url',] }],
    title: [{ type: Input }],
    description: [{ type: Input }],
    image: [{ type: Input }],
    tags: [{ type: Input }],
    autoSetMeta: [{ type: Input }],
    showIcon: [{ type: Input }],
    showText: [{ type: Input }],
    showCount: [{ type: Input }],
    text: [{ type: Input }],
    icon: [{ type: Input }],
    size: [{ type: Input }],
    theme: [{ type: Input }],
    count: [{ type: Output }],
    opened: [{ type: Output }],
    closed: [{ type: Output }],
    buttonClass: [{ type: HostBinding, args: ['class',] }],
    ref: [{ type: ViewChild, args: [ShareDirective,] }]
};
if (false) {
    /**
     * Share URL
     * @type {?}
     */
    ShareButton.prototype.url;
    /**
     * Share count value
     * @type {?}
     */
    ShareButton.prototype.shareCount;
    /**
     * Button name
     * @type {?}
     */
    ShareButton.prototype.button;
    /**
     * Share meta tags
     * @type {?}
     */
    ShareButton.prototype.title;
    /** @type {?} */
    ShareButton.prototype.description;
    /** @type {?} */
    ShareButton.prototype.image;
    /** @type {?} */
    ShareButton.prototype.tags;
    /**
     * Set meta tags from document head, useful when SEO is supported
     * @type {?}
     */
    ShareButton.prototype.autoSetMeta;
    /**
     * Show button icon
     * @type {?}
     */
    ShareButton.prototype.showIcon;
    /**
     * Show button text
     * @type {?}
     */
    ShareButton.prototype.showText;
    /**
     * Button share count
     * @type {?}
     */
    ShareButton.prototype.showCount;
    /**
     * Button custom text
     * @type {?}
     */
    ShareButton.prototype.text;
    /**
     * Button custom icon
     * @type {?}
     */
    ShareButton.prototype.icon;
    /**
     * Button size
     * @type {?}
     */
    ShareButton.prototype.size;
    /**
     * Button theme
     * @type {?}
     */
    ShareButton.prototype.theme;
    /**
     * Stream that emits when share count is fetched
     * @type {?}
     */
    ShareButton.prototype.count;
    /**
     * Stream that emits when share dialog is opened
     * @type {?}
     */
    ShareButton.prototype.opened;
    /**
     * Stream that emits when share dialog is closed
     * @type {?}
     */
    ShareButton.prototype.closed;
    /**
     * Get button prop from ShareDirective
     * @type {?}
     */
    ShareButton.prototype.ref;
    /** @type {?} */
    ShareButton.prototype.share;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2hhcmUtYnV0dG9uLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQG5neC1zaGFyZS9idXR0b24vIiwic291cmNlcyI6WyJsaWIvc2hhcmUtYnV0dG9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLFdBQVcsRUFBRSxZQUFZLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDeEgsT0FBTyxFQUFFLFlBQVksRUFBRSxjQUFjLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQVEvRCxNQUFNLE9BQU8sV0FBVzs7OztJQXFFdEIsWUFBb0IsS0FBbUI7UUFBbkIsVUFBSyxHQUFMLEtBQUssQ0FBYzs7OztRQXJDOUIsYUFBUSxHQUFHLElBQUksQ0FBQzs7OztRQUdoQixhQUFRLEdBQUcsS0FBSyxDQUFDOzs7O1FBR2pCLGNBQVMsR0FBRyxLQUFLLENBQUM7Ozs7UUFTbEIsU0FBSSxHQUFXLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDOzs7O1FBRy9CLFVBQUssR0FBVyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQzs7OztRQUdoQyxVQUFLLEdBQUcsSUFBSSxZQUFZLEVBQVUsQ0FBQzs7OztRQUduQyxXQUFNLEdBQUcsSUFBSSxZQUFZLEVBQVUsQ0FBQzs7OztRQUdwQyxXQUFNLEdBQUcsSUFBSSxZQUFZLEVBQVUsQ0FBQztJQVc5QyxDQUFDOzs7OztJQTNERCxJQUFxQixZQUFZLENBQUMsTUFBYztRQUM5QyxJQUFJLENBQUMsVUFBVSxHQUFHLENBQUMsQ0FBQztRQUNwQixJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztJQUN2QixDQUFDOzs7Ozs7SUFHRCxJQUFrQixNQUFNLENBQUMsR0FBVztRQUNsQyxJQUFJLENBQUMsVUFBVSxHQUFHLENBQUMsQ0FBQztRQUNwQixJQUFJLENBQUMsR0FBRyxHQUFHLEdBQUcsQ0FBQztJQUNqQixDQUFDOzs7OztJQTBDRCxJQUEwQixXQUFXO1FBQ25DLE9BQU8sZ0JBQWdCLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQztJQUN0QyxDQUFDOzs7OztJQVFELE9BQU8sQ0FBQyxLQUFhO1FBQ25CLElBQUksQ0FBQyxVQUFVLEdBQUcsS0FBSyxDQUFDO1FBQ3hCLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3pCLENBQUM7OztZQWpGRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLGNBQWM7Z0JBQ3hCLDh2Q0FBa0M7Z0JBRWxDLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNOzthQUNoRDs7OztZQVBRLFlBQVk7OzsyQkFtQmxCLEtBQUssU0FBQyxRQUFRO3FCQU1kLEtBQUssU0FBQyxLQUFLO29CQU1YLEtBQUs7MEJBQ0wsS0FBSztvQkFDTCxLQUFLO21CQUNMLEtBQUs7MEJBR0wsS0FBSzt1QkFHTCxLQUFLO3VCQUdMLEtBQUs7d0JBR0wsS0FBSzttQkFHTCxLQUFLO21CQUdMLEtBQUs7bUJBR0wsS0FBSztvQkFHTCxLQUFLO29CQUdMLE1BQU07cUJBR04sTUFBTTtxQkFHTixNQUFNOzBCQUdOLFdBQVcsU0FBQyxPQUFPO2tCQUtuQixTQUFTLFNBQUMsY0FBYzs7Ozs7OztJQWhFekIsMEJBQVk7Ozs7O0lBR1osaUNBQW1COzs7OztJQUduQiw2QkFBZTs7Ozs7SUFjZiw0QkFBdUI7O0lBQ3ZCLGtDQUE2Qjs7SUFDN0IsNEJBQXVCOztJQUN2QiwyQkFBc0I7Ozs7O0lBR3RCLGtDQUE4Qjs7Ozs7SUFHOUIsK0JBQXlCOzs7OztJQUd6QiwrQkFBMEI7Ozs7O0lBRzFCLGdDQUEyQjs7Ozs7SUFHM0IsMkJBQXNCOzs7OztJQUd0QiwyQkFBc0I7Ozs7O0lBR3RCLDJCQUF3Qzs7Ozs7SUFHeEMsNEJBQTBDOzs7OztJQUcxQyw0QkFBNkM7Ozs7O0lBRzdDLDZCQUE4Qzs7Ozs7SUFHOUMsNkJBQThDOzs7OztJQVE5QywwQkFBK0M7O0lBRW5DLDRCQUEyQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE91dHB1dCwgVmlld0NoaWxkLCBIb3N0QmluZGluZywgRXZlbnRFbWl0dGVyLCBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBTaGFyZVNlcnZpY2UsIFNoYXJlRGlyZWN0aXZlIH0gZnJvbSAnQG5neC1zaGFyZS9jb3JlJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnc2hhcmUtYnV0dG9uJyxcclxuICB0ZW1wbGF0ZVVybDogJy4vc2hhcmUtYnV0dG9uLmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWycuL3NoYXJlLWJ1dHRvbi5zY3NzJ10sXHJcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2hcclxufSlcclxuZXhwb3J0IGNsYXNzIFNoYXJlQnV0dG9uIHtcclxuXHJcbiAgLyoqIFNoYXJlIFVSTCAqL1xyXG4gIHVybDogc3RyaW5nO1xyXG5cclxuICAvKiogU2hhcmUgY291bnQgdmFsdWUgKi9cclxuICBzaGFyZUNvdW50OiBudW1iZXI7XHJcblxyXG4gIC8qKiBCdXR0b24gbmFtZSAqL1xyXG4gIGJ1dHRvbjogc3RyaW5nO1xyXG5cclxuICBASW5wdXQoJ2J1dHRvbicpIHNldCBjcmVhdGVCdXR0b24oYnV0dG9uOiBzdHJpbmcpIHtcclxuICAgIHRoaXMuc2hhcmVDb3VudCA9IDA7XHJcbiAgICB0aGlzLmJ1dHRvbiA9IGJ1dHRvbjtcclxuICB9XHJcblxyXG4gIC8qKiBTaGFyZSBVUkwgKi9cclxuICBASW5wdXQoJ3VybCcpIHNldCBzZXRVcmwodXJsOiBzdHJpbmcpIHtcclxuICAgIHRoaXMuc2hhcmVDb3VudCA9IDA7XHJcbiAgICB0aGlzLnVybCA9IHVybDtcclxuICB9XHJcblxyXG4gIC8qKiBTaGFyZSBtZXRhIHRhZ3MgKi9cclxuICBASW5wdXQoKSB0aXRsZTogc3RyaW5nO1xyXG4gIEBJbnB1dCgpIGRlc2NyaXB0aW9uOiBzdHJpbmc7XHJcbiAgQElucHV0KCkgaW1hZ2U6IHN0cmluZztcclxuICBASW5wdXQoKSB0YWdzOiBzdHJpbmc7XHJcblxyXG4gIC8qKiBTZXQgbWV0YSB0YWdzIGZyb20gZG9jdW1lbnQgaGVhZCwgdXNlZnVsIHdoZW4gU0VPIGlzIHN1cHBvcnRlZCAqL1xyXG4gIEBJbnB1dCgpIGF1dG9TZXRNZXRhOiBib29sZWFuO1xyXG5cclxuICAvKiogU2hvdyBidXR0b24gaWNvbiAqL1xyXG4gIEBJbnB1dCgpIHNob3dJY29uID0gdHJ1ZTtcclxuXHJcbiAgLyoqIFNob3cgYnV0dG9uIHRleHQgKi9cclxuICBASW5wdXQoKSBzaG93VGV4dCA9IGZhbHNlO1xyXG5cclxuICAvKiogQnV0dG9uIHNoYXJlIGNvdW50ICovXHJcbiAgQElucHV0KCkgc2hvd0NvdW50ID0gZmFsc2U7XHJcblxyXG4gIC8qKiBCdXR0b24gY3VzdG9tIHRleHQgKi9cclxuICBASW5wdXQoKSB0ZXh0OiBzdHJpbmc7XHJcblxyXG4gIC8qKiBCdXR0b24gY3VzdG9tIGljb24gKi9cclxuICBASW5wdXQoKSBpY29uOiBzdHJpbmc7XHJcblxyXG4gIC8qKiBCdXR0b24gc2l6ZSAqL1xyXG4gIEBJbnB1dCgpIHNpemU6IG51bWJlciA9IHRoaXMuc2hhcmUuc2l6ZTtcclxuXHJcbiAgLyoqIEJ1dHRvbiB0aGVtZSAqL1xyXG4gIEBJbnB1dCgpIHRoZW1lOiBzdHJpbmcgPSB0aGlzLnNoYXJlLnRoZW1lO1xyXG5cclxuICAvKiogU3RyZWFtIHRoYXQgZW1pdHMgd2hlbiBzaGFyZSBjb3VudCBpcyBmZXRjaGVkICovXHJcbiAgQE91dHB1dCgpIGNvdW50ID0gbmV3IEV2ZW50RW1pdHRlcjxudW1iZXI+KCk7XHJcblxyXG4gIC8qKiBTdHJlYW0gdGhhdCBlbWl0cyB3aGVuIHNoYXJlIGRpYWxvZyBpcyBvcGVuZWQgKi9cclxuICBAT3V0cHV0KCkgb3BlbmVkID0gbmV3IEV2ZW50RW1pdHRlcjxzdHJpbmc+KCk7XHJcblxyXG4gIC8qKiBTdHJlYW0gdGhhdCBlbWl0cyB3aGVuIHNoYXJlIGRpYWxvZyBpcyBjbG9zZWQgKi9cclxuICBAT3V0cHV0KCkgY2xvc2VkID0gbmV3IEV2ZW50RW1pdHRlcjxzdHJpbmc+KCk7XHJcblxyXG4gIC8qKiBTZXQgdGhlbWUgYXMgYnV0dG9uIGNsYXNzICovXHJcbiAgQEhvc3RCaW5kaW5nKCdjbGFzcycpIGdldCBidXR0b25DbGFzcygpIHtcclxuICAgIHJldHVybiBgc2ItYnV0dG9uIHNiLSR7dGhpcy50aGVtZX1gO1xyXG4gIH1cclxuXHJcbiAgLyoqIEdldCBidXR0b24gcHJvcCBmcm9tIFNoYXJlRGlyZWN0aXZlICovXHJcbiAgQFZpZXdDaGlsZChTaGFyZURpcmVjdGl2ZSkgcmVmOiBTaGFyZURpcmVjdGl2ZTtcclxuXHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBzaGFyZTogU2hhcmVTZXJ2aWNlKSB7XHJcbiAgfVxyXG5cclxuICBvbkNvdW50KGNvdW50OiBudW1iZXIpIHtcclxuICAgIHRoaXMuc2hhcmVDb3VudCA9IGNvdW50O1xyXG4gICAgdGhpcy5jb3VudC5lbWl0KGNvdW50KTtcclxuICB9XHJcblxyXG59XHJcbiJdfQ==