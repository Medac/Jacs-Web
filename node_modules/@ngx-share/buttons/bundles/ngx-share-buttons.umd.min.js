!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("@ngx-share/core"),require("rxjs"),require("rxjs/operators"),require("@angular/common"),require("@ngx-share/button")):"function"==typeof define&&define.amd?define("@ngx-share/buttons",["exports","@angular/core","@ngx-share/core","rxjs","rxjs/operators","@angular/common","@ngx-share/button"],e):e((t["ngx-share"]=t["ngx-share"]||{},t["ngx-share"].buttons={}),t.ng.core,t.core$1,t.rxjs,t.rxjs.operators,t.ng.common,t.button)}(this,function(t,n,o,e,s,r,u){"use strict";var i=function(){return(i=Object.assign||function(t){for(var e,n=1,o=arguments.length;n<o;n++)for(var s in e=arguments[n])Object.prototype.hasOwnProperty.call(e,s)&&(t[s]=e[s]);return t}).apply(this,arguments)},a=function(){function t(t){this._share=t,this._state$=new e.BehaviorSubject({includedButtons:[],excludedButtons:[],userButtons:[],selectedButtons:[],expanded:!0,shownCount:Object.keys(this._share.config.prop).length}),this._configSub$=e.Subscription.EMPTY,this.theme=this._share.theme,this.showIcon=!0,this.showText=!1,this.showCount=!1,this.size=0,this.count=new n.EventEmitter,this.opened=new n.EventEmitter,this.closed=new n.EventEmitter}return Object.defineProperty(t.prototype,"includedButtons",{set:function(t){this.updateState({includedButtons:t})},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"excludedButtons",{set:function(t){this.updateState({excludedButtons:t})},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"shownButtons",{set:function(t){this.updateState({shownCount:t})},enumerable:!0,configurable:!0}),t.prototype.ngOnInit=function(){var n=this;this.state$=this._state$.pipe(s.map(function(e){var t=(e.includedButtons.length?e.includedButtons:e.userButtons).filter(function(t){return e.excludedButtons.indexOf(t)<0}),n=t.slice(0,e.expanded?t.length:e.shownCount);return{userButtons:t,selectedButtons:n,expanded:e.expanded,shownCount:e.shownCount,moreIcon:e.moreIcon,lessIcon:e.lessIcon}})),this._configSub$=this._share.config$.subscribe(function(e){var t=(e.options.include.length?e.options.include:Object.keys(e.prop)).filter(function(t){return e.options.exclude.indexOf(t)<0});n.updateState({userButtons:t,expanded:!1,moreIcon:e.options.moreButtonIcon,lessIcon:e.options.lessButtonIcon})})},t.prototype.ngOnDestroy=function(){this._configSub$.unsubscribe(),this._state$.complete()},t.prototype.updateState=function(t){this._state$.next(i({},this._state$.value,t))},t.decorators=[{type:n.Component,args:[{selector:"share-buttons",template:'<div *ngIf="state$ | async; let state" class="sb-group sb-{{theme}}">\r\n\r\n  <share-button *ngFor="let button of state.selectedButtons"\r\n                [button]="button"\r\n                [theme]="theme"\r\n                [url]="url"\r\n                [title]="title"\r\n                [description]="description"\r\n                [image]="image"\r\n                [tags]="tags"\r\n                [autoSetMeta]="autoSetMeta"\r\n                [showCount]="showCount"\r\n                [showIcon]="showIcon"\r\n                [showText]="showText"\r\n                [size]="size"\r\n                (opened)="opened.emit($event)"\r\n                (closed)="closed.emit($event)"\r\n                (count)="count.emit($event)"></share-button>\r\n\r\n  <div class="sb-button sb-{{theme}}">\r\n\r\n    <expand-button *ngIf="state.shownCount < state.userButtons.length"\r\n                   [expanded]="state.expanded"\r\n                   [moreIcon]="state.moreIcon"\r\n                   [lessIcon]="state.lessIcon"\r\n                   [size]="(1 + size/20) * 14"\r\n                   (toggle)="updateState({expanded: $event})">\r\n    </expand-button>\r\n\r\n  </div>\r\n</div>\r\n',changeDetection:n.ChangeDetectionStrategy.OnPush,styles:[":host{display:inherit}"]}]}],t.ctorParameters=function(){return[{type:o.ShareService}]},t.propDecorators={theme:[{type:n.Input}],includedButtons:[{type:n.Input,args:["include"]}],excludedButtons:[{type:n.Input,args:["exclude"]}],shownButtons:[{type:n.Input,args:["show"]}],url:[{type:n.Input}],title:[{type:n.Input}],description:[{type:n.Input}],image:[{type:n.Input}],tags:[{type:n.Input}],autoSetMeta:[{type:n.Input}],showIcon:[{type:n.Input}],showText:[{type:n.Input}],showCount:[{type:n.Input}],size:[{type:n.Input}],count:[{type:n.Output}],opened:[{type:n.Output}],closed:[{type:n.Output}]},t}(),c=function(){function t(t){this.toggle=new n.EventEmitter,t.nativeElement.style.setProperty("--button-color","#FF6651")}return t.decorators=[{type:n.Component,args:[{selector:"expand-button",changeDetection:n.ChangeDetectionStrategy.OnPush,template:'\n    <button class="sb-wrapper sb-expand sb-show-icon"\n            [style.fontSize.px]="size"\n            (click)="toggle.emit(!expanded)">\n\n      <div class="sb-inner">\n        <div class="sb-content">\n          <div class="sb-icon">\n            <fa-icon [icon]="expanded ? lessIcon : moreIcon"></fa-icon>\n          </div>\n        </div>\n      </div>\n    </button>\n  '}]}],t.ctorParameters=function(){return[{type:n.ElementRef}]},t.propDecorators={moreIcon:[{type:n.Input}],lessIcon:[{type:n.Input}],expanded:[{type:n.Input}],size:[{type:n.Input}],toggle:[{type:n.Output}]},t}(),p=function(){function e(){}return e.forRoot=function(t){return{ngModule:e,providers:[{provide:o.CONFIG,useValue:t}]}},e.decorators=[{type:n.NgModule,args:[{declarations:[a,c],imports:[u.ShareButtonModule,r.CommonModule],exports:[u.ShareButtonModule,a]}]}],e}();t.ShareButtonsModule=p,t.ShareButtons=a,t.Éµa=c,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=ngx-share-buttons.umd.min.js.map